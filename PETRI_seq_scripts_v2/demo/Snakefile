# script_dir = f"{os.path.dirname(os.path.abspath(__file__))}/../scripts"
import os


def change_ext(filename, new_ext):
    base, _ = os.path.splitext(filename)
    return base + new_ext


script_dir = f"../scripts"
barcode_dir = f"data/sc_barcodes_v2"
n_lanes = 1
n_bc_idxs = 96
bc_1 = bc_2 = bc_3 = range(1, n_bc_idxs + 1)
sample = "random20000"
sample_string = f"{sample}_S1"


include: "rules/preprocess.smk"
include: "rules/overlap.smk"
include: "rules/sc_pipeline.smk"
include: "rules/align.smk"


input_fastq = expand(
    "data/{sample}/{sample_string}_L00{lane}_R{r}_001.fastq.gz",
    sample_string=sample_string,
    lane=range(1, n_lanes + 1),
    r=[1, 2],
    sample=sample,
)

trimmed_fastq = expand(
    "results/{sample}/{sample}_QF_L00{lane}_R2_001.fastq",
    lane=range(1, n_lanes + 1),
    r=[1, 2],
    sample=sample,
)

fastqc_output = expand(
    "results/{sample}/{sample_string}_L00{lane}_R{r}_001_fastqc.{format}",
    sample_string=sample_string,
    sample=sample,
    lane=range(1, n_lanes + 1),
    r=[1, 2],
    format=["html", "zip"],
)


reference_genome = f"data/U00096_JE2.fa"
indexed_reference_genome = reference_genome + ".bwt"

reference_annotation = f"data/U00096_JE2_rRNA.gff"


rule pipeline_generic:
    input:
        f"results/{sample}/{sample}_2trim.fastq",
        f"results/{sample}_barcode_table.txt",
        reference_genome,
        indexed_reference_genome,
        reference_annotation,
    output:
        count_matrix=f"results/{sample}_v11_threshold_0_mixed_species_gene_matrix.txt",
    shell:
        f"bash {script_dir}/pipeline_v2_generic.sh {sample} {reference_genome} {reference_annotation}"


knee_plot = f"results/{sample}_kneePlot.pdf"
histogram = f"results/{sample}_ReadsPerBC.pdf"


rule all:
    input:
        rules.pipeline_generic.output.count_matrix,
        knee_plot,
        histogram,
        fastqc_output,
